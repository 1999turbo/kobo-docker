rabbit:
  image: kobotoolbox/rabbit:latest
  # build: ./base_images/rabbit
  hostname: rabbit
  environment:
    - RABBITMQ_LOGS=-
    - RABBITMQ_SASL_LOGS=-
  restart: always

psql:
  image: kobotoolbox/psql:latest
  # build: ./base_images/psql
  hostname: psql
  volumes:
    - "./.vols/db:/srv/db"
  restart: always

mongo:
  image: kobotoolbox/mongo:latest
  # build: ./base_images/mongo
  hostname: mongo
  environment:
    - MONGO_DATA=/srv/db
  volumes:
    - "./.vols/mongo:/srv/db"
  restart: always

kobocat:
  image: kobotoolbox/kobocat:latest
  # build: ../kobocat
  hostname: kobocat
  env_file:
    - ./envfile.local.txt
  links:
    - rabbit
    - mongo
    - psql
    - kpi
  volumes:
    - "./.vols/static/kobocat:/srv/static"
    - ./scripts/wait_for_rabbit.bash:/etc/my_init.d/01_wait_for_rabbit.bash:ro
    - ./scripts/wait_for_mongo.bash:/etc/my_init.d/02_wait_for_mongo.bash:ro
    - ./scripts/wait_for_postgres.bash:/etc/my_init.d/03_wait_for_postgres.bash:ro
    - ./scripts/wait_for_kpi.bash:/etc/my_init.d/04_wait_for_kpi.bash:ro
    - ./scripts/computed_vars.local.source.bash:/etc/profile.d/kobocat_computed_vars.source.bash.sh:ro
    # Dev: Use the live `kobocat` directory from the host machine.
    # - ../kobocat:/srv/src/kobocat
  environment:
    - KOBOCAT_BROKER_URL=amqp://guest:guest@rabbit:5672/
    - ENKETO_PROTOCOL=http
    - ENKETO_VERSION=express
    - DJANGO_SETTINGS_MODULE=onadata.settings.kc_environ
    - DJANGO_DEBUG=False
    - DATABASE_URL=postgis://kobo:kobo@psql:5432/kobotoolbox
    - KOBO_PSQL_DB_NAME=kobotoolbox
    - KOBO_PSQL_DB_USER=kobo
  restart: always

kpi:
  image: kobotoolbox/kpi:latest
  # build: ../kpi
  hostname: kpi
  env_file:
    - ./envfile.local.txt
  links:
    - psql
    - rabbit
  volumes:
    - "./.vols/static/kpi:/srv/static"
    # The Whoosh search index needs persistent storage
    - "./.vols/whoosh:/srv/whoosh"
    - ./scripts/wait_for_rabbit.bash:/etc/my_init.d/01_wait_for_rabbit.bash:ro
    - ./scripts/wait_for_postgres.bash:/etc/my_init.d/02_wait_for_postgres.bash:ro
    - ./scripts/create_kobo_superuser.bash://etc/my_init.d/20_create_kobo_superuser.bash:ro
    - ./scripts/computed_vars.local.source.bash:/etc/profile.d/kpi_computed_vars.source.bash.sh:ro
    # Dev: Use the live `kpi` directory from the host machine.
    # - ../kpi:/srv/src/kpi
  environment:
    - ENKETO_VERSION=express
    - DATABASE_URL=postgres://kobo:kobo@psql:5432/kobotoolbox
    - DJANGO_DEBUG=False
    - KPI_PREFIX=/
  restart: always

nginx:
  image: kobotoolbox/nginx:latest
  # build: ./base_images/nginx
  hostname: nginx
  env_file:
    - ./envfile.local.txt
  environment:
    - NGINX_CONFIG_FILE_NAME=nginx_site_http.conf
    - NGINX_DEBUG_kpi=False
    - NGINX_DEBUG_kobocat=False
  ports:
    # NOTE: The host ports (left of the ":") must match the values in `envfile.local.txt`. Do not modify the right hand side values (9000+).
    - 8000:9000 # KPI
    - 8001:9001 # KoBoCAT
    - 8005:9005 # Enketo Express
  volumes:
      - "./.vols/static:/srv/www:ro"
      # get the logs out of glusterfs!
      - "./.vols/../log/nginx:/var/log/nginx"
      - ./nginx/:/tmp/kobo_nginx/:ro
      - ./nginx/nginx_command.bash:/etc/service/nginx/run:ro
  links:
    - kobocat
    - kpi
    - enketo_express
  restart: always

# Adapted from https://github.com/kobotoolbox/enketo-express/blob/docker/docker-compose.yml.
enketo_express:
  image: kobotoolbox/enketo_express
  # build: ../enketo-express/
  env_file:
    - ./envfile.local.txt
  links:
    - redis_main
    - redis_cache
  restart: always
  volumes:
    - ./scripts/computed_vars.local.source.bash:/etc/profile.d/enketo_express_computed_vars.source.bash.sh:ro
    - ./enketo_express_config.json:/srv/tmp/enketo_express_config.json:ro
    - ./scripts/enketo_express_copy_config.bash:/etc/my_init.d/01_enketo_express_copy_config.bash:ro

# Adapted from https://github.com/kobotoolbox/enketo-express/blob/docker/docker-compose.yml.
redis_main:
  image: redis:2.6
  # Map our "main" Redis config into the container.
  volumes:
    - ./redis/redis-enketo-main.conf:/etc/redis/redis.conf
    - "./.vols/redis_main_data/:/data/"
  restart: always

# Adapted from https://github.com/kobotoolbox/enketo-express/blob/docker/docker-compose.yml.
redis_cache:
  image: redis:2.6
  # Map our "cache" Redis config into the container.
  volumes:
    - ./redis/redis-enketo-cache.conf:/etc/redis/redis.conf
  restart: always
